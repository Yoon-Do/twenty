const axios = require('axios');

// Test script cho Super Admin Impersonation
async function testImpersonation() {
  console.log('üöÄ Testing Super Admin Impersonation Feature');
  console.log('=========================================');
  
  // Configuration
  const baseURL = 'http://localhost:3000';
  const testWorkspaceId = 'test-workspace-id'; // Thay ƒë·ªïi th√†nh workspace ID th·ª±c t·∫ø
  
  try {
    // B∆∞·ªõc 1: ƒêƒÉng nh·∫≠p v·ªõi Super Admin (c·∫ßn c√≥ t√†i kho·∫£n Super Admin)
    console.log('1. ƒêƒÉng nh·∫≠p v·ªõi Super Admin...');
    // Gi·∫£ ƒë·ªãnh b·∫°n ƒë√£ c√≥ access token c·ªßa Super Admin
    const adminToken = 'your-super-admin-token-here';
    
    if (adminToken === 'your-super-admin-token-here') {
      console.log('‚ùå Vui l√≤ng c·∫≠p nh·∫≠t adminToken trong script');
      console.log('   B·∫°n c·∫ßn:');
      console.log('   - T·∫°o t√†i kho·∫£n Super Admin trong database');
      console.log('   - ƒê·∫∑t canAccessFullAdminPanel = true');
      console.log('   - ƒêƒÉng nh·∫≠p v√† l·∫•y token');
      return;
    }
    
    // B∆∞·ªõc 2: G·ªçi API impersonate
    console.log('2. G·ªçi API impersonate...');
    const impersonateResponse = await axios.post(
      `${baseURL}/rest/admin/workspaces/${testWorkspaceId}/impersonate`,
      {},
      {
        headers: {
          'Authorization': `Bearer ${adminToken}`,
          'Content-Type': 'application/json'
        }
      }
    );
    
    console.log('‚úÖ Impersonation token t·∫°o th√†nh c√¥ng!');
    console.log('Token:', impersonateResponse.data.token);
    console.log('Expires at:', impersonateResponse.data.expiresAt);
    
    // B∆∞·ªõc 3: Test token impersonation
    console.log('3. Test token impersonation...');
    const impersonationToken = impersonateResponse.data.token;
    
    // Th·ª≠ truy c·∫≠p m·ªôt API c·ªßa workspace b·∫±ng token impersonation
    const testAPIResponse = await axios.get(
      `${baseURL}/rest/objects/people`, // Ho·∫∑c endpoint kh√°c
      {
        headers: {
          'Authorization': `Bearer ${impersonationToken}`,
          'Content-Type': 'application/json'
        }
      }
    );
    
    console.log('‚úÖ Truy c·∫≠p workspace th√†nh c√¥ng v·ªõi token impersonation!');
    console.log('Response status:', testAPIResponse.status);
    
  } catch (error) {
    console.error('‚ùå L·ªói khi test impersonation:');
    if (error.response) {
      console.error('Status:', error.response.status);
      console.error('Data:', error.response.data);
    } else {
      console.error('Error:', error.message);
    }
  }
}

// Ch·∫°y test
testImpersonation();